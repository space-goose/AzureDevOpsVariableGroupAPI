parameters:
- name: environment
  type: string
- name: dependsOn
  type: string
- name: requiresApproval
  type: boolean
- name: adminEmail
  type: string
stages:
- stage: ${{parameters.environment}}_deployment
  dependsOn: ${{parameters.dependsOn}}
  jobs:
  - job: waitForApproval
    condition: eq('${{ parameters.requiresApproval }}', true)
    displayName: Wait for deployment approval 
    pool: server    
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:   
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: |
          test@test.com
          example@example.com
        instructions: 'Please validate the build configuration and resume'
        onTimeout: 'reject'
  - job: ${{parameters.environment}}_deployment
    dependsOn: 'waitForApproval'
    condition: in(dependencies.waitForApproval.result, 'Succeeded', 'Skipped')
    pool:
      name: Default
    steps:
    - checkout: none #skip checking out the default repository resource
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        artifactName: 'Build-$(Build.BuildNumber)'
        downloadPath: $(System.DefaultWorkingDirectory) 
    - task: replacetokens@5
      inputs:
        rootDirectory: '$(System.DefaultWorkingDirectory)/Build-$(Build.BuildNumber)/variableGroups'
        targetFiles: '**/templates/*.json'
        encoding: 'auto'
        tokenPattern: 'custom'
        tokenPrefix: '$('
        tokenSuffix: ')$'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        variableFiles: '**/parameters_${{parameters.environment}}.json'
        enableRecursion: false
        useLegacyPattern: false
        enableTelemetry: false
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Obtain list of parameter files from env directory
          $files = Get-ChildItem "$(System.DefaultWorkingDirectory)/Build-$(Build.BuildNumber)/variableGroups/templates" | % { $_.FullName }
          Foreach ($file in $files) {
            $returnVal = $(System.DefaultWorkingDirectory)/Build-$(Build.BuildNumber)/scripts/GetVariableGroupId.ps1 $env:SYSTEM_ACCESSTOKEN $(orgName) $file
            $(System.DefaultWorkingDirectory)/Build-$(Build.BuildNumber)/scripts/CreateVariableGroup.ps1 $env:SYSTEM_ACCESSTOKEN $(orgName) $file $returnVal
          }
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
